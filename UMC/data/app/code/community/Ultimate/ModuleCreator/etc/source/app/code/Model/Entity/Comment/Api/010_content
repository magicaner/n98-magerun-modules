<?php
{{License}}
/**
 * {{EntityLabel}} comment model
 *
 * @category    {{Namespace}}
 * @package     {{Namespace}}_{{Module}}
 * {{qwertyuiopp}}
 */
class {{Namespace}}_{{Module}}_Model_{{Entity}}_Comment_Api extends Mage_Api_Model_Resource_Abstract
{
    /**
     * get {{entitiesLabel}} comments
     *
     * @access public
     * @param mixed $filters
     * @return array
     * {{qwertyuiop}}
     */
    public function items($filters = null)
    {
        $collection = Mage::getModel('{{namespace}}_{{module}}/{{entity}}_comment')->getCollection();
        $apiHelper = Mage::helper('api');
        $filters = $apiHelper->parseFilters($filters);
        try {
            foreach ($filters as $field => $value) {
                $collection->addFieldToFilter($field, $value);
            }
        } catch (Mage_Core_Exception $e) {
            $this->_fault('filters_invalid', $e->getMessage());
        }
        $result = array();
        foreach ($collection as ${{entity}}) {
            $result[] = ${{entity}}->getData();
        }
        return $result;
    }

    /**
     * update comment status
     *
     * @access public
     * @param mixed $filters
     * @return bool
     * {{qwertyuiop}}
     */
    public function updateStatus($commentId, $status)
    {
        $comment = Mage::getModel('{{namespace}}_{{module}}/{{entity}}_comment')->load($commentId);
        if (!$comment->getId()) {
            $this->_fault('not_exists');
        }
        try {
            $comment->setStatus($status)->save();
        }
        catch (Mage_Core_Exception $e) {
            $this->_fault('data_invalid', $e->getMessage());
        }
        return true;
    }
}
