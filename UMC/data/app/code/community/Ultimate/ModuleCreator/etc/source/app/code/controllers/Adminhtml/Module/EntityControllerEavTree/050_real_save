                /**
                 * Check "Use Default Value" checkboxes values
                 */
                if ($useDefaults = $this->getRequest()->getPost('use_default')) {
                    foreach ($useDefaults as $attributeCode) {
                        ${{entity}}->setData($attributeCode, false);
                    }
                }

                /**
                 * Unset $_POST['use_config'] before save
                 */
                ${{entity}}->unsetData('use_post_data_config');

                ${{entity}}->save();
                Mage::getSingleton('adminhtml/session')->addSuccess(
                    Mage::helper('{{namespace}}_{{module}}')->__('The {{entityLabel}} has been saved.')
                );
                $refreshTree = 'true';
            } catch (Exception $e) {
                $this->_getSession()->addError($e->getMessage())
                    ->set{{Entity}}Data($data);
                $refreshTree = 'false';
            }
        }
        $url = $this->getUrl('*/*/edit', array('_current' => true, 'id' => ${{entity}}->getId()));
        $this->getResponse()->setBody(
            '<script type="text/javascript">parent.updateContent("' . $url . '", {}, '.$refreshTree.');</script>'
        );
    }

    /**
     * Move {{entityLabel}} action
     *
     * @access public
     * {{qwertyuiop}}
     */
    public function moveAction()
    {
        ${{entity}} = $this->_init{{Entity}}();
        if (!${{entity}}) {
            $this->getResponse()->setBody(
                Mage::helper('{{namespace}}_{{module}}')->__('{{EntityLabel}} move error')
            );
            return;
        }
        $parentNodeId   = $this->getRequest()->getPost('pid', false);
        $prevNodeId     = $this->getRequest()->getPost('aid', false);

        try {
            ${{entity}}->move($parentNodeId, $prevNodeId);
            $this->getResponse()->setBody("SUCCESS");
        } catch (Mage_Core_Exception $e) {
            $this->getResponse()->setBody($e->getMessage());
        } catch (Exception $e) {
            $this->getResponse()->setBody(
                Mage::helper('{{namespace}}_{{module}}')->__('{{EntityLabel}} move error')
            );
            Mage::logException($e);
        }

    }

    /**
     * Delete {{entityLabel}} action
     *
     * @access public
     * {{qwertyuiop}}
     */
    public function deleteAction()
    {
        if ($id = (int) $this->getRequest()->getParam('id')) {
            try {
                ${{entity}} = Mage::getModel('{{namespace}}_{{module}}/{{entity}}')->load($id);
                Mage::dispatchEvent(
                    '{{namespace}}_{{module}}_controller_{{entity}}_delete',
                    array('{{entity}}' => ${{entity}})
                );

                Mage::getSingleton('admin/session')->set{{Entity}}DeletedPath(${{entity}}->getPath());

                ${{entity}}->delete();
                Mage::getSingleton('adminhtml/session')->addSuccess(
                    Mage::helper('{{namespace}}_{{module}}')->__('The {{entityLabel}} has been deleted.')
                );
            } catch (Mage_Core_Exception $e) {
                Mage::getSingleton('adminhtml/session')->addError($e->getMessage());
                $this->getResponse()->setRedirect($this->getUrl('*/*/edit', array('_current'=>true)));
                return;
            } catch (Exception $e) {
                Mage::logException($e);
                Mage::getSingleton('adminhtml/session')->addError(
                    Mage::helper('{{namespace}}_{{module}}')->__('An error occurred while trying to delete the {{entityLabel}}.')
                );
                $this->getResponse()->setRedirect($this->getUrl('*/*/edit', array('_current'=>true)));
                return;
            }
        }
        $this->getResponse()->setRedirect($this->getUrl('*/*/', array('_current'=>true, 'id'=>null)));
    }

    /**
     * Tree Action
     * Retrieve {{entityLabel}} tree
     *
     * @access public
     * {{qwertyuiop}}
     */
    public function treeAction()
    {
        $storeId = (int) $this->getRequest()->getParam('store');
        ${{entity}}Id = (int) $this->getRequest()->getParam('id');

        if ($storeId) {
            if (!${{entity}}Id) {
                $store = Mage::app()->getStore($storeId);
                $rootId = Mage::helper('{{namespace}}_{{module}}/{{entity}}')->getRoot{{Entity}}Id();
                $this->getRequest()->setParam('id', $rootId);
            }
        }

        ${{entity}} = $this->_init{{Entity}}();

        $block = $this->getLayout()->createBlock('{{namespace}}_{{module}}/adminhtml_{{entity}}_tree');
        $root  = $block->getRoot();
        $this->getResponse()->setBody(
            Mage::helper('core')->jsonEncode(
                array(
                    'data' => $block->getTree(),
                    'parameters' => array(
                        'text'         => $block->buildNodeName($root),
                        'draggable'    => false,
                        'allowDrop'    => ($root->getIsVisible()) ? true : false,
                        'id'           => (int) $root->getId(),
                        'expanded'     => (int) $block->getIsWasExpanded(),
                        'store_id'     => (int) $block->getStore()->getId(),
                        '{{entity}}_id' => (int) ${{entity}}->getId(),
                        'root_visible' => (int) $root->getIsVisible()
                    )
                )
            )
        );
    }

   /**
    * Build response for refresh input element 'path' in form
    *
    * @access public
    * {{qwertyuiop}}
    */
    public function refreshPathAction()
    {
        if ($id = (int) $this->getRequest()->getParam('id')) {
            ${{entity}} = Mage::getModel('{{namespace}}_{{module}}/{{entity}}')->load($id);
            $this->getResponse()->setBody(
                Mage::helper('core')->jsonEncode(
                    array(
                       'id' => $id,
                       'path' => ${{entity}}->getPath(),
                    )
                )
            );
        }
    }

    /**
     * Check if admin has permissions to visit related pages
     *
     * @access protected
     * @return boolean
     * {{qwertyuiop}}
     */
    protected function _isAllowed()
    {
        return Mage::getSingleton('admin/session')->isAllowed('{{selectedMenuPath}}');
    }
